syntax = "proto3";
package agoric.swingset;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/Agoric/agoric-sdk/golang/cosmos/x/swingset/types";

// Params are the swingset configuration/governance parameters.
message Params {
    option (gogoproto.equal) = true;
    option (gogoproto.goproto_stringer) = false;

    // Map from unit name to a value in SwingSet "beans".
    // Must not be negative.
    //
    // These values are used by SwingSet to normalize named per-resource charges
    // (maybe rent) in a single Nat usage unit, the "bean".
    //
    // There is no required order to this list of entries, but all the chain
    // nodes must all serialize and deserialize the existing order without
    // permuting it.
    repeated StringBeans beans_per_unit = 1 [
      (gogoproto.nullable) = false
    ];

    // The price in Coins per the unit named "fee".  This value is used by
    // cosmic-swingset JS code to decide how many tokens to charge.
    //
    // cost = beans_used * fee_unit_price / beans_per_unit["fee"]
    repeated cosmos.base.v1beta1.Coin fee_unit_price = 2 [
      (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
      (gogoproto.nullable) = false
    ];

    // The SwingSet bootstrap vat configuration file.  Not usefully modifiable
    // via governance as it is only referenced by the chain's initial
    // construction.
    string bootstrap_vat_config = 3;
}

// Map element of a string key to a Nat bean count.
message StringBeans {
  option (gogoproto.equal) = true;

  // What the beans are for.
  string key = 1;

  // The actual bean value.
  string beans = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Uint",
    (gogoproto.nullable) = false
  ];
}
