import * as _185 from './abci/types.js';
import * as _186 from './crypto/keys.js';
import * as _187 from './crypto/proof.js';
import * as _188 from './libs/bits/types.js';
import * as _189 from './p2p/types.js';
import * as _190 from './types/block.js';
import * as _191 from './types/evidence.js';
import * as _192 from './types/params.js';
import * as _193 from './types/types.js';
import * as _194 from './types/validator.js';
import * as _195 from './version/types.js';
export declare namespace tendermint {
    const abci: {
        checkTxTypeFromJSON(object: any): _185.CheckTxType;
        checkTxTypeToJSON(object: _185.CheckTxType): string;
        responseOfferSnapshot_ResultFromJSON(object: any): _185.ResponseOfferSnapshot_Result;
        responseOfferSnapshot_ResultToJSON(object: _185.ResponseOfferSnapshot_Result): string;
        responseApplySnapshotChunk_ResultFromJSON(object: any): _185.ResponseApplySnapshotChunk_Result;
        responseApplySnapshotChunk_ResultToJSON(object: _185.ResponseApplySnapshotChunk_Result): string;
        evidenceTypeFromJSON(object: any): _185.EvidenceType;
        evidenceTypeToJSON(object: _185.EvidenceType): string;
        CheckTxType: typeof _185.CheckTxType;
        CheckTxTypeSDKType: typeof _185.CheckTxType;
        ResponseOfferSnapshot_Result: typeof _185.ResponseOfferSnapshot_Result;
        ResponseOfferSnapshot_ResultSDKType: typeof _185.ResponseOfferSnapshot_Result;
        ResponseApplySnapshotChunk_Result: typeof _185.ResponseApplySnapshotChunk_Result;
        ResponseApplySnapshotChunk_ResultSDKType: typeof _185.ResponseApplySnapshotChunk_Result;
        EvidenceType: typeof _185.EvidenceType;
        EvidenceTypeSDKType: typeof _185.EvidenceType;
        Request: {
            typeUrl: string;
            encode(message: _185.Request, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _185.Request;
            fromJSON(object: any): _185.Request;
            toJSON(message: _185.Request): import("../json-safe.js").JsonSafe<_185.Request>;
            fromPartial(object: Partial<_185.Request>): _185.Request;
            fromProtoMsg(message: _185.RequestProtoMsg): _185.Request;
            toProto(message: _185.Request): Uint8Array;
            toProtoMsg(message: _185.Request): _185.RequestProtoMsg;
        };
        RequestEcho: {
            typeUrl: string;
            encode(message: _185.RequestEcho, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _185.RequestEcho;
            fromJSON(object: any): _185.RequestEcho;
            toJSON(message: _185.RequestEcho): import("../json-safe.js").JsonSafe<_185.RequestEcho>;
            fromPartial(object: Partial<_185.RequestEcho>): _185.RequestEcho;
            fromProtoMsg(message: _185.RequestEchoProtoMsg): _185.RequestEcho;
            toProto(message: _185.RequestEcho): Uint8Array;
            toProtoMsg(message: _185.RequestEcho): _185.RequestEchoProtoMsg;
        };
        RequestFlush: {
            typeUrl: string;
            encode(_: _185.RequestFlush, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _185.RequestFlush;
            fromJSON(_: any): _185.RequestFlush;
            toJSON(_: _185.RequestFlush): import("../json-safe.js").JsonSafe<_185.RequestFlush>;
            fromPartial(_: Partial<_185.RequestFlush>): _185.RequestFlush;
            fromProtoMsg(message: _185.RequestFlushProtoMsg): _185.RequestFlush;
            toProto(message: _185.RequestFlush): Uint8Array;
            toProtoMsg(message: _185.RequestFlush): _185.RequestFlushProtoMsg;
        };
        RequestInfo: {
            typeUrl: string;
            encode(message: _185.RequestInfo, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _185.RequestInfo;
            fromJSON(object: any): _185.RequestInfo;
            toJSON(message: _185.RequestInfo): import("../json-safe.js").JsonSafe<_185.RequestInfo>;
            fromPartial(object: Partial<_185.RequestInfo>): _185.RequestInfo;
            fromProtoMsg(message: _185.RequestInfoProtoMsg): _185.RequestInfo;
            toProto(message: _185.RequestInfo): Uint8Array;
            toProtoMsg(message: _185.RequestInfo): _185.RequestInfoProtoMsg;
        };
        RequestSetOption: {
            typeUrl: string;
            encode(message: _185.RequestSetOption, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _185.RequestSetOption;
            fromJSON(object: any): _185.RequestSetOption;
            toJSON(message: _185.RequestSetOption): import("../json-safe.js").JsonSafe<_185.RequestSetOption>;
            fromPartial(object: Partial<_185.RequestSetOption>): _185.RequestSetOption;
            fromProtoMsg(message: _185.RequestSetOptionProtoMsg): _185.RequestSetOption;
            toProto(message: _185.RequestSetOption): Uint8Array;
            toProtoMsg(message: _185.RequestSetOption): _185.RequestSetOptionProtoMsg;
        };
        RequestInitChain: {
            typeUrl: string;
            encode(message: _185.RequestInitChain, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _185.RequestInitChain;
            fromJSON(object: any): _185.RequestInitChain;
            toJSON(message: _185.RequestInitChain): import("../json-safe.js").JsonSafe<_185.RequestInitChain>;
            fromPartial(object: Partial<_185.RequestInitChain>): _185.RequestInitChain;
            fromProtoMsg(message: _185.RequestInitChainProtoMsg): _185.RequestInitChain;
            toProto(message: _185.RequestInitChain): Uint8Array;
            toProtoMsg(message: _185.RequestInitChain): _185.RequestInitChainProtoMsg;
        };
        RequestQuery: {
            typeUrl: string;
            encode(message: _185.RequestQuery, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _185.RequestQuery;
            fromJSON(object: any): _185.RequestQuery;
            toJSON(message: _185.RequestQuery): import("../json-safe.js").JsonSafe<_185.RequestQuery>;
            fromPartial(object: Partial<_185.RequestQuery>): _185.RequestQuery;
            fromProtoMsg(message: _185.RequestQueryProtoMsg): _185.RequestQuery;
            toProto(message: _185.RequestQuery): Uint8Array;
            toProtoMsg(message: _185.RequestQuery): _185.RequestQueryProtoMsg;
        };
        RequestBeginBlock: {
            typeUrl: string;
            encode(message: _185.RequestBeginBlock, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _185.RequestBeginBlock;
            fromJSON(object: any): _185.RequestBeginBlock;
            toJSON(message: _185.RequestBeginBlock): import("../json-safe.js").JsonSafe<_185.RequestBeginBlock>;
            fromPartial(object: Partial<_185.RequestBeginBlock>): _185.RequestBeginBlock;
            fromProtoMsg(message: _185.RequestBeginBlockProtoMsg): _185.RequestBeginBlock;
            toProto(message: _185.RequestBeginBlock): Uint8Array;
            toProtoMsg(message: _185.RequestBeginBlock): _185.RequestBeginBlockProtoMsg;
        };
        RequestCheckTx: {
            typeUrl: string;
            encode(message: _185.RequestCheckTx, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _185.RequestCheckTx;
            fromJSON(object: any): _185.RequestCheckTx;
            toJSON(message: _185.RequestCheckTx): import("../json-safe.js").JsonSafe<_185.RequestCheckTx>;
            fromPartial(object: Partial<_185.RequestCheckTx>): _185.RequestCheckTx;
            fromProtoMsg(message: _185.RequestCheckTxProtoMsg): _185.RequestCheckTx;
            toProto(message: _185.RequestCheckTx): Uint8Array;
            toProtoMsg(message: _185.RequestCheckTx): _185.RequestCheckTxProtoMsg;
        };
        RequestDeliverTx: {
            typeUrl: string;
            encode(message: _185.RequestDeliverTx, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _185.RequestDeliverTx;
            fromJSON(object: any): _185.RequestDeliverTx;
            toJSON(message: _185.RequestDeliverTx): import("../json-safe.js").JsonSafe<_185.RequestDeliverTx>;
            fromPartial(object: Partial<_185.RequestDeliverTx>): _185.RequestDeliverTx;
            fromProtoMsg(message: _185.RequestDeliverTxProtoMsg): _185.RequestDeliverTx;
            toProto(message: _185.RequestDeliverTx): Uint8Array;
            toProtoMsg(message: _185.RequestDeliverTx): _185.RequestDeliverTxProtoMsg;
        };
        RequestEndBlock: {
            typeUrl: string;
            encode(message: _185.RequestEndBlock, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _185.RequestEndBlock;
            fromJSON(object: any): _185.RequestEndBlock;
            toJSON(message: _185.RequestEndBlock): import("../json-safe.js").JsonSafe<_185.RequestEndBlock>;
            fromPartial(object: Partial<_185.RequestEndBlock>): _185.RequestEndBlock;
            fromProtoMsg(message: _185.RequestEndBlockProtoMsg): _185.RequestEndBlock;
            toProto(message: _185.RequestEndBlock): Uint8Array;
            toProtoMsg(message: _185.RequestEndBlock): _185.RequestEndBlockProtoMsg;
        };
        RequestCommit: {
            typeUrl: string;
            encode(_: _185.RequestCommit, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _185.RequestCommit;
            fromJSON(_: any): _185.RequestCommit;
            toJSON(_: _185.RequestCommit): import("../json-safe.js").JsonSafe<_185.RequestCommit>;
            fromPartial(_: Partial<_185.RequestCommit>): _185.RequestCommit;
            fromProtoMsg(message: _185.RequestCommitProtoMsg): _185.RequestCommit;
            toProto(message: _185.RequestCommit): Uint8Array;
            toProtoMsg(message: _185.RequestCommit): _185.RequestCommitProtoMsg;
        };
        RequestListSnapshots: {
            typeUrl: string;
            encode(_: _185.RequestListSnapshots, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _185.RequestListSnapshots;
            fromJSON(_: any): _185.RequestListSnapshots;
            toJSON(_: _185.RequestListSnapshots): import("../json-safe.js").JsonSafe<_185.RequestListSnapshots>;
            fromPartial(_: Partial<_185.RequestListSnapshots>): _185.RequestListSnapshots;
            fromProtoMsg(message: _185.RequestListSnapshotsProtoMsg): _185.RequestListSnapshots;
            toProto(message: _185.RequestListSnapshots): Uint8Array;
            toProtoMsg(message: _185.RequestListSnapshots): _185.RequestListSnapshotsProtoMsg;
        };
        RequestOfferSnapshot: {
            typeUrl: string;
            encode(message: _185.RequestOfferSnapshot, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _185.RequestOfferSnapshot;
            fromJSON(object: any): _185.RequestOfferSnapshot;
            toJSON(message: _185.RequestOfferSnapshot): import("../json-safe.js").JsonSafe<_185.RequestOfferSnapshot>;
            fromPartial(object: Partial<_185.RequestOfferSnapshot>): _185.RequestOfferSnapshot;
            fromProtoMsg(message: _185.RequestOfferSnapshotProtoMsg): _185.RequestOfferSnapshot;
            toProto(message: _185.RequestOfferSnapshot): Uint8Array;
            toProtoMsg(message: _185.RequestOfferSnapshot): _185.RequestOfferSnapshotProtoMsg;
        };
        RequestLoadSnapshotChunk: {
            typeUrl: string;
            encode(message: _185.RequestLoadSnapshotChunk, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _185.RequestLoadSnapshotChunk;
            fromJSON(object: any): _185.RequestLoadSnapshotChunk;
            toJSON(message: _185.RequestLoadSnapshotChunk): import("../json-safe.js").JsonSafe<_185.RequestLoadSnapshotChunk>;
            fromPartial(object: Partial<_185.RequestLoadSnapshotChunk>): _185.RequestLoadSnapshotChunk;
            fromProtoMsg(message: _185.RequestLoadSnapshotChunkProtoMsg): _185.RequestLoadSnapshotChunk;
            toProto(message: _185.RequestLoadSnapshotChunk): Uint8Array;
            toProtoMsg(message: _185.RequestLoadSnapshotChunk): _185.RequestLoadSnapshotChunkProtoMsg;
        };
        RequestApplySnapshotChunk: {
            typeUrl: string;
            encode(message: _185.RequestApplySnapshotChunk, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _185.RequestApplySnapshotChunk;
            fromJSON(object: any): _185.RequestApplySnapshotChunk;
            toJSON(message: _185.RequestApplySnapshotChunk): import("../json-safe.js").JsonSafe<_185.RequestApplySnapshotChunk>;
            fromPartial(object: Partial<_185.RequestApplySnapshotChunk>): _185.RequestApplySnapshotChunk;
            fromProtoMsg(message: _185.RequestApplySnapshotChunkProtoMsg): _185.RequestApplySnapshotChunk;
            toProto(message: _185.RequestApplySnapshotChunk): Uint8Array;
            toProtoMsg(message: _185.RequestApplySnapshotChunk): _185.RequestApplySnapshotChunkProtoMsg;
        };
        Response: {
            typeUrl: string;
            encode(message: _185.Response, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _185.Response;
            fromJSON(object: any): _185.Response;
            toJSON(message: _185.Response): import("../json-safe.js").JsonSafe<_185.Response>;
            fromPartial(object: Partial<_185.Response>): _185.Response;
            fromProtoMsg(message: _185.ResponseProtoMsg): _185.Response;
            toProto(message: _185.Response): Uint8Array;
            toProtoMsg(message: _185.Response): _185.ResponseProtoMsg;
        };
        ResponseException: {
            typeUrl: string;
            encode(message: _185.ResponseException, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _185.ResponseException;
            fromJSON(object: any): _185.ResponseException;
            toJSON(message: _185.ResponseException): import("../json-safe.js").JsonSafe<_185.ResponseException>;
            fromPartial(object: Partial<_185.ResponseException>): _185.ResponseException;
            fromProtoMsg(message: _185.ResponseExceptionProtoMsg): _185.ResponseException;
            toProto(message: _185.ResponseException): Uint8Array;
            toProtoMsg(message: _185.ResponseException): _185.ResponseExceptionProtoMsg;
        };
        ResponseEcho: {
            typeUrl: string;
            encode(message: _185.ResponseEcho, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _185.ResponseEcho;
            fromJSON(object: any): _185.ResponseEcho;
            toJSON(message: _185.ResponseEcho): import("../json-safe.js").JsonSafe<_185.ResponseEcho>;
            fromPartial(object: Partial<_185.ResponseEcho>): _185.ResponseEcho;
            fromProtoMsg(message: _185.ResponseEchoProtoMsg): _185.ResponseEcho;
            toProto(message: _185.ResponseEcho): Uint8Array;
            toProtoMsg(message: _185.ResponseEcho): _185.ResponseEchoProtoMsg;
        };
        ResponseFlush: {
            typeUrl: string;
            encode(_: _185.ResponseFlush, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _185.ResponseFlush;
            fromJSON(_: any): _185.ResponseFlush;
            toJSON(_: _185.ResponseFlush): import("../json-safe.js").JsonSafe<_185.ResponseFlush>;
            fromPartial(_: Partial<_185.ResponseFlush>): _185.ResponseFlush;
            fromProtoMsg(message: _185.ResponseFlushProtoMsg): _185.ResponseFlush;
            toProto(message: _185.ResponseFlush): Uint8Array;
            toProtoMsg(message: _185.ResponseFlush): _185.ResponseFlushProtoMsg;
        };
        ResponseInfo: {
            typeUrl: string;
            encode(message: _185.ResponseInfo, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _185.ResponseInfo;
            fromJSON(object: any): _185.ResponseInfo;
            toJSON(message: _185.ResponseInfo): import("../json-safe.js").JsonSafe<_185.ResponseInfo>;
            fromPartial(object: Partial<_185.ResponseInfo>): _185.ResponseInfo;
            fromProtoMsg(message: _185.ResponseInfoProtoMsg): _185.ResponseInfo;
            toProto(message: _185.ResponseInfo): Uint8Array;
            toProtoMsg(message: _185.ResponseInfo): _185.ResponseInfoProtoMsg;
        };
        ResponseSetOption: {
            typeUrl: string;
            encode(message: _185.ResponseSetOption, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _185.ResponseSetOption;
            fromJSON(object: any): _185.ResponseSetOption;
            toJSON(message: _185.ResponseSetOption): import("../json-safe.js").JsonSafe<_185.ResponseSetOption>;
            fromPartial(object: Partial<_185.ResponseSetOption>): _185.ResponseSetOption;
            fromProtoMsg(message: _185.ResponseSetOptionProtoMsg): _185.ResponseSetOption;
            toProto(message: _185.ResponseSetOption): Uint8Array;
            toProtoMsg(message: _185.ResponseSetOption): _185.ResponseSetOptionProtoMsg;
        };
        ResponseInitChain: {
            typeUrl: string;
            encode(message: _185.ResponseInitChain, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _185.ResponseInitChain;
            fromJSON(object: any): _185.ResponseInitChain;
            toJSON(message: _185.ResponseInitChain): import("../json-safe.js").JsonSafe<_185.ResponseInitChain>;
            fromPartial(object: Partial<_185.ResponseInitChain>): _185.ResponseInitChain;
            fromProtoMsg(message: _185.ResponseInitChainProtoMsg): _185.ResponseInitChain;
            toProto(message: _185.ResponseInitChain): Uint8Array;
            toProtoMsg(message: _185.ResponseInitChain): _185.ResponseInitChainProtoMsg;
        };
        ResponseQuery: {
            typeUrl: string;
            encode(message: _185.ResponseQuery, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _185.ResponseQuery;
            fromJSON(object: any): _185.ResponseQuery;
            toJSON(message: _185.ResponseQuery): import("../json-safe.js").JsonSafe<_185.ResponseQuery>;
            fromPartial(object: Partial<_185.ResponseQuery>): _185.ResponseQuery;
            fromProtoMsg(message: _185.ResponseQueryProtoMsg): _185.ResponseQuery;
            toProto(message: _185.ResponseQuery): Uint8Array;
            toProtoMsg(message: _185.ResponseQuery): _185.ResponseQueryProtoMsg;
        };
        ResponseBeginBlock: {
            typeUrl: string;
            encode(message: _185.ResponseBeginBlock, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _185.ResponseBeginBlock;
            fromJSON(object: any): _185.ResponseBeginBlock;
            toJSON(message: _185.ResponseBeginBlock): import("../json-safe.js").JsonSafe<_185.ResponseBeginBlock>;
            fromPartial(object: Partial<_185.ResponseBeginBlock>): _185.ResponseBeginBlock;
            fromProtoMsg(message: _185.ResponseBeginBlockProtoMsg): _185.ResponseBeginBlock;
            toProto(message: _185.ResponseBeginBlock): Uint8Array;
            toProtoMsg(message: _185.ResponseBeginBlock): _185.ResponseBeginBlockProtoMsg;
        };
        ResponseCheckTx: {
            typeUrl: string;
            encode(message: _185.ResponseCheckTx, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _185.ResponseCheckTx;
            fromJSON(object: any): _185.ResponseCheckTx;
            toJSON(message: _185.ResponseCheckTx): import("../json-safe.js").JsonSafe<_185.ResponseCheckTx>;
            fromPartial(object: Partial<_185.ResponseCheckTx>): _185.ResponseCheckTx;
            fromProtoMsg(message: _185.ResponseCheckTxProtoMsg): _185.ResponseCheckTx;
            toProto(message: _185.ResponseCheckTx): Uint8Array;
            toProtoMsg(message: _185.ResponseCheckTx): _185.ResponseCheckTxProtoMsg;
        };
        ResponseDeliverTx: {
            typeUrl: string;
            encode(message: _185.ResponseDeliverTx, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _185.ResponseDeliverTx;
            fromJSON(object: any): _185.ResponseDeliverTx;
            toJSON(message: _185.ResponseDeliverTx): import("../json-safe.js").JsonSafe<_185.ResponseDeliverTx>;
            fromPartial(object: Partial<_185.ResponseDeliverTx>): _185.ResponseDeliverTx;
            fromProtoMsg(message: _185.ResponseDeliverTxProtoMsg): _185.ResponseDeliverTx;
            toProto(message: _185.ResponseDeliverTx): Uint8Array;
            toProtoMsg(message: _185.ResponseDeliverTx): _185.ResponseDeliverTxProtoMsg;
        };
        ResponseEndBlock: {
            typeUrl: string;
            encode(message: _185.ResponseEndBlock, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _185.ResponseEndBlock;
            fromJSON(object: any): _185.ResponseEndBlock;
            toJSON(message: _185.ResponseEndBlock): import("../json-safe.js").JsonSafe<_185.ResponseEndBlock>;
            fromPartial(object: Partial<_185.ResponseEndBlock>): _185.ResponseEndBlock;
            fromProtoMsg(message: _185.ResponseEndBlockProtoMsg): _185.ResponseEndBlock;
            toProto(message: _185.ResponseEndBlock): Uint8Array;
            toProtoMsg(message: _185.ResponseEndBlock): _185.ResponseEndBlockProtoMsg;
        };
        ResponseCommit: {
            typeUrl: string;
            encode(message: _185.ResponseCommit, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _185.ResponseCommit;
            fromJSON(object: any): _185.ResponseCommit;
            toJSON(message: _185.ResponseCommit): import("../json-safe.js").JsonSafe<_185.ResponseCommit>;
            fromPartial(object: Partial<_185.ResponseCommit>): _185.ResponseCommit;
            fromProtoMsg(message: _185.ResponseCommitProtoMsg): _185.ResponseCommit;
            toProto(message: _185.ResponseCommit): Uint8Array;
            toProtoMsg(message: _185.ResponseCommit): _185.ResponseCommitProtoMsg;
        };
        ResponseListSnapshots: {
            typeUrl: string;
            encode(message: _185.ResponseListSnapshots, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _185.ResponseListSnapshots;
            fromJSON(object: any): _185.ResponseListSnapshots;
            toJSON(message: _185.ResponseListSnapshots): import("../json-safe.js").JsonSafe<_185.ResponseListSnapshots>;
            fromPartial(object: Partial<_185.ResponseListSnapshots>): _185.ResponseListSnapshots;
            fromProtoMsg(message: _185.ResponseListSnapshotsProtoMsg): _185.ResponseListSnapshots;
            toProto(message: _185.ResponseListSnapshots): Uint8Array;
            toProtoMsg(message: _185.ResponseListSnapshots): _185.ResponseListSnapshotsProtoMsg;
        };
        ResponseOfferSnapshot: {
            typeUrl: string;
            encode(message: _185.ResponseOfferSnapshot, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _185.ResponseOfferSnapshot;
            fromJSON(object: any): _185.ResponseOfferSnapshot;
            toJSON(message: _185.ResponseOfferSnapshot): import("../json-safe.js").JsonSafe<_185.ResponseOfferSnapshot>;
            fromPartial(object: Partial<_185.ResponseOfferSnapshot>): _185.ResponseOfferSnapshot;
            fromProtoMsg(message: _185.ResponseOfferSnapshotProtoMsg): _185.ResponseOfferSnapshot;
            toProto(message: _185.ResponseOfferSnapshot): Uint8Array;
            toProtoMsg(message: _185.ResponseOfferSnapshot): _185.ResponseOfferSnapshotProtoMsg;
        };
        ResponseLoadSnapshotChunk: {
            typeUrl: string;
            encode(message: _185.ResponseLoadSnapshotChunk, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _185.ResponseLoadSnapshotChunk;
            fromJSON(object: any): _185.ResponseLoadSnapshotChunk;
            toJSON(message: _185.ResponseLoadSnapshotChunk): import("../json-safe.js").JsonSafe<_185.ResponseLoadSnapshotChunk>;
            fromPartial(object: Partial<_185.ResponseLoadSnapshotChunk>): _185.ResponseLoadSnapshotChunk;
            fromProtoMsg(message: _185.ResponseLoadSnapshotChunkProtoMsg): _185.ResponseLoadSnapshotChunk;
            toProto(message: _185.ResponseLoadSnapshotChunk): Uint8Array;
            toProtoMsg(message: _185.ResponseLoadSnapshotChunk): _185.ResponseLoadSnapshotChunkProtoMsg;
        };
        ResponseApplySnapshotChunk: {
            typeUrl: string;
            encode(message: _185.ResponseApplySnapshotChunk, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _185.ResponseApplySnapshotChunk;
            fromJSON(object: any): _185.ResponseApplySnapshotChunk;
            toJSON(message: _185.ResponseApplySnapshotChunk): import("../json-safe.js").JsonSafe<_185.ResponseApplySnapshotChunk>;
            fromPartial(object: Partial<_185.ResponseApplySnapshotChunk>): _185.ResponseApplySnapshotChunk;
            fromProtoMsg(message: _185.ResponseApplySnapshotChunkProtoMsg): _185.ResponseApplySnapshotChunk;
            toProto(message: _185.ResponseApplySnapshotChunk): Uint8Array;
            toProtoMsg(message: _185.ResponseApplySnapshotChunk): _185.ResponseApplySnapshotChunkProtoMsg;
        };
        ConsensusParams: {
            typeUrl: string;
            encode(message: _185.ConsensusParams, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _185.ConsensusParams;
            fromJSON(object: any): _185.ConsensusParams;
            toJSON(message: _185.ConsensusParams): import("../json-safe.js").JsonSafe<_185.ConsensusParams>;
            fromPartial(object: Partial<_185.ConsensusParams>): _185.ConsensusParams;
            fromProtoMsg(message: _185.ConsensusParamsProtoMsg): _185.ConsensusParams;
            toProto(message: _185.ConsensusParams): Uint8Array;
            toProtoMsg(message: _185.ConsensusParams): _185.ConsensusParamsProtoMsg;
        };
        BlockParams: {
            typeUrl: string;
            encode(message: _185.BlockParams, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _185.BlockParams;
            fromJSON(object: any): _185.BlockParams;
            toJSON(message: _185.BlockParams): import("../json-safe.js").JsonSafe<_185.BlockParams>;
            fromPartial(object: Partial<_185.BlockParams>): _185.BlockParams;
            fromProtoMsg(message: _185.BlockParamsProtoMsg): _185.BlockParams;
            toProto(message: _185.BlockParams): Uint8Array;
            toProtoMsg(message: _185.BlockParams): _185.BlockParamsProtoMsg;
        };
        LastCommitInfo: {
            typeUrl: string;
            encode(message: _185.LastCommitInfo, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _185.LastCommitInfo;
            fromJSON(object: any): _185.LastCommitInfo;
            toJSON(message: _185.LastCommitInfo): import("../json-safe.js").JsonSafe<_185.LastCommitInfo>;
            fromPartial(object: Partial<_185.LastCommitInfo>): _185.LastCommitInfo;
            fromProtoMsg(message: _185.LastCommitInfoProtoMsg): _185.LastCommitInfo;
            toProto(message: _185.LastCommitInfo): Uint8Array;
            toProtoMsg(message: _185.LastCommitInfo): _185.LastCommitInfoProtoMsg;
        };
        Event: {
            typeUrl: string;
            encode(message: _185.Event, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _185.Event;
            fromJSON(object: any): _185.Event;
            toJSON(message: _185.Event): import("../json-safe.js").JsonSafe<_185.Event>;
            fromPartial(object: Partial<_185.Event>): _185.Event;
            fromProtoMsg(message: _185.EventProtoMsg): _185.Event;
            toProto(message: _185.Event): Uint8Array;
            toProtoMsg(message: _185.Event): _185.EventProtoMsg;
        };
        EventAttribute: {
            typeUrl: string;
            encode(message: _185.EventAttribute, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _185.EventAttribute;
            fromJSON(object: any): _185.EventAttribute;
            toJSON(message: _185.EventAttribute): import("../json-safe.js").JsonSafe<_185.EventAttribute>;
            fromPartial(object: Partial<_185.EventAttribute>): _185.EventAttribute;
            fromProtoMsg(message: _185.EventAttributeProtoMsg): _185.EventAttribute;
            toProto(message: _185.EventAttribute): Uint8Array;
            toProtoMsg(message: _185.EventAttribute): _185.EventAttributeProtoMsg;
        };
        TxResult: {
            typeUrl: string;
            encode(message: _185.TxResult, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _185.TxResult;
            fromJSON(object: any): _185.TxResult;
            toJSON(message: _185.TxResult): import("../json-safe.js").JsonSafe<_185.TxResult>;
            fromPartial(object: Partial<_185.TxResult>): _185.TxResult;
            fromProtoMsg(message: _185.TxResultProtoMsg): _185.TxResult;
            toProto(message: _185.TxResult): Uint8Array;
            toProtoMsg(message: _185.TxResult): _185.TxResultProtoMsg;
        };
        Validator: {
            typeUrl: string;
            encode(message: _185.Validator, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _185.Validator;
            fromJSON(object: any): _185.Validator;
            toJSON(message: _185.Validator): import("../json-safe.js").JsonSafe<_185.Validator>;
            fromPartial(object: Partial<_185.Validator>): _185.Validator;
            fromProtoMsg(message: _185.ValidatorProtoMsg): _185.Validator;
            toProto(message: _185.Validator): Uint8Array;
            toProtoMsg(message: _185.Validator): _185.ValidatorProtoMsg;
        };
        ValidatorUpdate: {
            typeUrl: string;
            encode(message: _185.ValidatorUpdate, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _185.ValidatorUpdate;
            fromJSON(object: any): _185.ValidatorUpdate;
            toJSON(message: _185.ValidatorUpdate): import("../json-safe.js").JsonSafe<_185.ValidatorUpdate>;
            fromPartial(object: Partial<_185.ValidatorUpdate>): _185.ValidatorUpdate;
            fromProtoMsg(message: _185.ValidatorUpdateProtoMsg): _185.ValidatorUpdate;
            toProto(message: _185.ValidatorUpdate): Uint8Array;
            toProtoMsg(message: _185.ValidatorUpdate): _185.ValidatorUpdateProtoMsg;
        };
        VoteInfo: {
            typeUrl: string;
            encode(message: _185.VoteInfo, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _185.VoteInfo;
            fromJSON(object: any): _185.VoteInfo;
            toJSON(message: _185.VoteInfo): import("../json-safe.js").JsonSafe<_185.VoteInfo>;
            fromPartial(object: Partial<_185.VoteInfo>): _185.VoteInfo;
            fromProtoMsg(message: _185.VoteInfoProtoMsg): _185.VoteInfo;
            toProto(message: _185.VoteInfo): Uint8Array;
            toProtoMsg(message: _185.VoteInfo): _185.VoteInfoProtoMsg;
        };
        Evidence: {
            typeUrl: string;
            encode(message: _185.Evidence, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _185.Evidence;
            fromJSON(object: any): _185.Evidence;
            toJSON(message: _185.Evidence): import("../json-safe.js").JsonSafe<_185.Evidence>;
            fromPartial(object: Partial<_185.Evidence>): _185.Evidence;
            fromProtoMsg(message: _185.EvidenceProtoMsg): _185.Evidence;
            toProto(message: _185.Evidence): Uint8Array;
            toProtoMsg(message: _185.Evidence): _185.EvidenceProtoMsg;
        };
        Snapshot: {
            typeUrl: string;
            encode(message: _185.Snapshot, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _185.Snapshot;
            fromJSON(object: any): _185.Snapshot;
            toJSON(message: _185.Snapshot): import("../json-safe.js").JsonSafe<_185.Snapshot>;
            fromPartial(object: Partial<_185.Snapshot>): _185.Snapshot;
            fromProtoMsg(message: _185.SnapshotProtoMsg): _185.Snapshot;
            toProto(message: _185.Snapshot): Uint8Array;
            toProtoMsg(message: _185.Snapshot): _185.SnapshotProtoMsg;
        };
    };
    const crypto: {
        Proof: {
            typeUrl: string;
            encode(message: _187.Proof, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _187.Proof;
            fromJSON(object: any): _187.Proof;
            toJSON(message: _187.Proof): import("../json-safe.js").JsonSafe<_187.Proof>;
            fromPartial(object: Partial<_187.Proof>): _187.Proof;
            fromProtoMsg(message: _187.ProofProtoMsg): _187.Proof;
            toProto(message: _187.Proof): Uint8Array;
            toProtoMsg(message: _187.Proof): _187.ProofProtoMsg;
        };
        ValueOp: {
            typeUrl: string;
            encode(message: _187.ValueOp, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _187.ValueOp;
            fromJSON(object: any): _187.ValueOp;
            toJSON(message: _187.ValueOp): import("../json-safe.js").JsonSafe<_187.ValueOp>;
            fromPartial(object: Partial<_187.ValueOp>): _187.ValueOp;
            fromProtoMsg(message: _187.ValueOpProtoMsg): _187.ValueOp;
            toProto(message: _187.ValueOp): Uint8Array;
            toProtoMsg(message: _187.ValueOp): _187.ValueOpProtoMsg;
        };
        DominoOp: {
            typeUrl: string;
            encode(message: _187.DominoOp, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _187.DominoOp;
            fromJSON(object: any): _187.DominoOp;
            toJSON(message: _187.DominoOp): import("../json-safe.js").JsonSafe<_187.DominoOp>;
            fromPartial(object: Partial<_187.DominoOp>): _187.DominoOp;
            fromProtoMsg(message: _187.DominoOpProtoMsg): _187.DominoOp;
            toProto(message: _187.DominoOp): Uint8Array;
            toProtoMsg(message: _187.DominoOp): _187.DominoOpProtoMsg;
        };
        ProofOp: {
            typeUrl: string;
            encode(message: _187.ProofOp, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _187.ProofOp;
            fromJSON(object: any): _187.ProofOp;
            toJSON(message: _187.ProofOp): import("../json-safe.js").JsonSafe<_187.ProofOp>;
            fromPartial(object: Partial<_187.ProofOp>): _187.ProofOp;
            fromProtoMsg(message: _187.ProofOpProtoMsg): _187.ProofOp;
            toProto(message: _187.ProofOp): Uint8Array;
            toProtoMsg(message: _187.ProofOp): _187.ProofOpProtoMsg;
        };
        ProofOps: {
            typeUrl: string;
            encode(message: _187.ProofOps, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _187.ProofOps;
            fromJSON(object: any): _187.ProofOps;
            toJSON(message: _187.ProofOps): import("../json-safe.js").JsonSafe<_187.ProofOps>;
            fromPartial(object: Partial<_187.ProofOps>): _187.ProofOps;
            fromProtoMsg(message: _187.ProofOpsProtoMsg): _187.ProofOps;
            toProto(message: _187.ProofOps): Uint8Array;
            toProtoMsg(message: _187.ProofOps): _187.ProofOpsProtoMsg;
        };
        PublicKey: {
            typeUrl: string;
            encode(message: _186.PublicKey, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _186.PublicKey;
            fromJSON(object: any): _186.PublicKey;
            toJSON(message: _186.PublicKey): import("../json-safe.js").JsonSafe<_186.PublicKey>;
            fromPartial(object: Partial<_186.PublicKey>): _186.PublicKey;
            fromProtoMsg(message: _186.PublicKeyProtoMsg): _186.PublicKey;
            toProto(message: _186.PublicKey): Uint8Array;
            toProtoMsg(message: _186.PublicKey): _186.PublicKeyProtoMsg;
        };
    };
    namespace libs {
        const bits: {
            BitArray: {
                typeUrl: string;
                encode(message: _188.BitArray, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
                decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _188.BitArray;
                fromJSON(object: any): _188.BitArray;
                toJSON(message: _188.BitArray): import("../json-safe.js").JsonSafe<_188.BitArray>;
                fromPartial(object: Partial<_188.BitArray>): _188.BitArray;
                fromProtoMsg(message: _188.BitArrayProtoMsg): _188.BitArray;
                toProto(message: _188.BitArray): Uint8Array;
                toProtoMsg(message: _188.BitArray): _188.BitArrayProtoMsg;
            };
        };
    }
    const p2p: {
        ProtocolVersion: {
            typeUrl: string;
            encode(message: _189.ProtocolVersion, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _189.ProtocolVersion;
            fromJSON(object: any): _189.ProtocolVersion;
            toJSON(message: _189.ProtocolVersion): import("../json-safe.js").JsonSafe<_189.ProtocolVersion>;
            fromPartial(object: Partial<_189.ProtocolVersion>): _189.ProtocolVersion;
            fromProtoMsg(message: _189.ProtocolVersionProtoMsg): _189.ProtocolVersion;
            toProto(message: _189.ProtocolVersion): Uint8Array;
            toProtoMsg(message: _189.ProtocolVersion): _189.ProtocolVersionProtoMsg;
        };
        NodeInfo: {
            typeUrl: string;
            encode(message: _189.NodeInfo, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _189.NodeInfo;
            fromJSON(object: any): _189.NodeInfo;
            toJSON(message: _189.NodeInfo): import("../json-safe.js").JsonSafe<_189.NodeInfo>;
            fromPartial(object: Partial<_189.NodeInfo>): _189.NodeInfo;
            fromProtoMsg(message: _189.NodeInfoProtoMsg): _189.NodeInfo;
            toProto(message: _189.NodeInfo): Uint8Array;
            toProtoMsg(message: _189.NodeInfo): _189.NodeInfoProtoMsg;
        };
        NodeInfoOther: {
            typeUrl: string;
            encode(message: _189.NodeInfoOther, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _189.NodeInfoOther;
            fromJSON(object: any): _189.NodeInfoOther;
            toJSON(message: _189.NodeInfoOther): import("../json-safe.js").JsonSafe<_189.NodeInfoOther>;
            fromPartial(object: Partial<_189.NodeInfoOther>): _189.NodeInfoOther;
            fromProtoMsg(message: _189.NodeInfoOtherProtoMsg): _189.NodeInfoOther;
            toProto(message: _189.NodeInfoOther): Uint8Array;
            toProtoMsg(message: _189.NodeInfoOther): _189.NodeInfoOtherProtoMsg;
        };
        PeerInfo: {
            typeUrl: string;
            encode(message: _189.PeerInfo, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _189.PeerInfo;
            fromJSON(object: any): _189.PeerInfo;
            toJSON(message: _189.PeerInfo): import("../json-safe.js").JsonSafe<_189.PeerInfo>;
            fromPartial(object: Partial<_189.PeerInfo>): _189.PeerInfo;
            fromProtoMsg(message: _189.PeerInfoProtoMsg): _189.PeerInfo;
            toProto(message: _189.PeerInfo): Uint8Array;
            toProtoMsg(message: _189.PeerInfo): _189.PeerInfoProtoMsg;
        };
        PeerAddressInfo: {
            typeUrl: string;
            encode(message: _189.PeerAddressInfo, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _189.PeerAddressInfo;
            fromJSON(object: any): _189.PeerAddressInfo;
            toJSON(message: _189.PeerAddressInfo): import("../json-safe.js").JsonSafe<_189.PeerAddressInfo>;
            fromPartial(object: Partial<_189.PeerAddressInfo>): _189.PeerAddressInfo;
            fromProtoMsg(message: _189.PeerAddressInfoProtoMsg): _189.PeerAddressInfo;
            toProto(message: _189.PeerAddressInfo): Uint8Array;
            toProtoMsg(message: _189.PeerAddressInfo): _189.PeerAddressInfoProtoMsg;
        };
    };
    const types: {
        ValidatorSet: {
            typeUrl: string;
            encode(message: _194.ValidatorSet, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _194.ValidatorSet;
            fromJSON(object: any): _194.ValidatorSet;
            toJSON(message: _194.ValidatorSet): import("../json-safe.js").JsonSafe<_194.ValidatorSet>;
            fromPartial(object: Partial<_194.ValidatorSet>): _194.ValidatorSet;
            fromProtoMsg(message: _194.ValidatorSetProtoMsg): _194.ValidatorSet;
            toProto(message: _194.ValidatorSet): Uint8Array;
            toProtoMsg(message: _194.ValidatorSet): _194.ValidatorSetProtoMsg;
        };
        Validator: {
            typeUrl: string;
            encode(message: _194.Validator, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _194.Validator;
            fromJSON(object: any): _194.Validator;
            toJSON(message: _194.Validator): import("../json-safe.js").JsonSafe<_194.Validator>;
            fromPartial(object: Partial<_194.Validator>): _194.Validator;
            fromProtoMsg(message: _194.ValidatorProtoMsg): _194.Validator;
            toProto(message: _194.Validator): Uint8Array;
            toProtoMsg(message: _194.Validator): _194.ValidatorProtoMsg;
        };
        SimpleValidator: {
            typeUrl: string;
            encode(message: _194.SimpleValidator, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _194.SimpleValidator;
            fromJSON(object: any): _194.SimpleValidator;
            toJSON(message: _194.SimpleValidator): import("../json-safe.js").JsonSafe<_194.SimpleValidator>;
            fromPartial(object: Partial<_194.SimpleValidator>): _194.SimpleValidator;
            fromProtoMsg(message: _194.SimpleValidatorProtoMsg): _194.SimpleValidator;
            toProto(message: _194.SimpleValidator): Uint8Array;
            toProtoMsg(message: _194.SimpleValidator): _194.SimpleValidatorProtoMsg;
        };
        blockIDFlagFromJSON(object: any): _193.BlockIDFlag;
        blockIDFlagToJSON(object: _193.BlockIDFlag): string;
        signedMsgTypeFromJSON(object: any): _193.SignedMsgType;
        signedMsgTypeToJSON(object: _193.SignedMsgType): string;
        BlockIDFlag: typeof _193.BlockIDFlag;
        BlockIDFlagSDKType: typeof _193.BlockIDFlag;
        SignedMsgType: typeof _193.SignedMsgType;
        SignedMsgTypeSDKType: typeof _193.SignedMsgType;
        PartSetHeader: {
            typeUrl: string;
            encode(message: _193.PartSetHeader, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _193.PartSetHeader;
            fromJSON(object: any): _193.PartSetHeader;
            toJSON(message: _193.PartSetHeader): import("../json-safe.js").JsonSafe<_193.PartSetHeader>;
            fromPartial(object: Partial<_193.PartSetHeader>): _193.PartSetHeader;
            fromProtoMsg(message: _193.PartSetHeaderProtoMsg): _193.PartSetHeader;
            toProto(message: _193.PartSetHeader): Uint8Array;
            toProtoMsg(message: _193.PartSetHeader): _193.PartSetHeaderProtoMsg;
        };
        Part: {
            typeUrl: string;
            encode(message: _193.Part, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _193.Part;
            fromJSON(object: any): _193.Part;
            toJSON(message: _193.Part): import("../json-safe.js").JsonSafe<_193.Part>;
            fromPartial(object: Partial<_193.Part>): _193.Part;
            fromProtoMsg(message: _193.PartProtoMsg): _193.Part;
            toProto(message: _193.Part): Uint8Array;
            toProtoMsg(message: _193.Part): _193.PartProtoMsg;
        };
        BlockID: {
            typeUrl: string;
            encode(message: _193.BlockID, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _193.BlockID;
            fromJSON(object: any): _193.BlockID;
            toJSON(message: _193.BlockID): import("../json-safe.js").JsonSafe<_193.BlockID>;
            fromPartial(object: Partial<_193.BlockID>): _193.BlockID;
            fromProtoMsg(message: _193.BlockIDProtoMsg): _193.BlockID;
            toProto(message: _193.BlockID): Uint8Array;
            toProtoMsg(message: _193.BlockID): _193.BlockIDProtoMsg;
        };
        Header: {
            typeUrl: string;
            encode(message: _193.Header, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _193.Header;
            fromJSON(object: any): _193.Header;
            toJSON(message: _193.Header): import("../json-safe.js").JsonSafe<_193.Header>;
            fromPartial(object: Partial<_193.Header>): _193.Header;
            fromProtoMsg(message: _193.HeaderProtoMsg): _193.Header;
            toProto(message: _193.Header): Uint8Array;
            toProtoMsg(message: _193.Header): _193.HeaderProtoMsg;
        };
        Data: {
            typeUrl: string;
            encode(message: _193.Data, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _193.Data;
            fromJSON(object: any): _193.Data;
            toJSON(message: _193.Data): import("../json-safe.js").JsonSafe<_193.Data>;
            fromPartial(object: Partial<_193.Data>): _193.Data;
            fromProtoMsg(message: _193.DataProtoMsg): _193.Data;
            toProto(message: _193.Data): Uint8Array;
            toProtoMsg(message: _193.Data): _193.DataProtoMsg;
        };
        Vote: {
            typeUrl: string;
            encode(message: _193.Vote, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _193.Vote;
            fromJSON(object: any): _193.Vote;
            toJSON(message: _193.Vote): import("../json-safe.js").JsonSafe<_193.Vote>;
            fromPartial(object: Partial<_193.Vote>): _193.Vote;
            fromProtoMsg(message: _193.VoteProtoMsg): _193.Vote;
            toProto(message: _193.Vote): Uint8Array;
            toProtoMsg(message: _193.Vote): _193.VoteProtoMsg;
        };
        Commit: {
            typeUrl: string;
            encode(message: _193.Commit, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _193.Commit;
            fromJSON(object: any): _193.Commit;
            toJSON(message: _193.Commit): import("../json-safe.js").JsonSafe<_193.Commit>;
            fromPartial(object: Partial<_193.Commit>): _193.Commit;
            fromProtoMsg(message: _193.CommitProtoMsg): _193.Commit;
            toProto(message: _193.Commit): Uint8Array;
            toProtoMsg(message: _193.Commit): _193.CommitProtoMsg;
        };
        CommitSig: {
            typeUrl: string;
            encode(message: _193.CommitSig, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _193.CommitSig;
            fromJSON(object: any): _193.CommitSig;
            toJSON(message: _193.CommitSig): import("../json-safe.js").JsonSafe<_193.CommitSig>;
            fromPartial(object: Partial<_193.CommitSig>): _193.CommitSig;
            fromProtoMsg(message: _193.CommitSigProtoMsg): _193.CommitSig;
            toProto(message: _193.CommitSig): Uint8Array;
            toProtoMsg(message: _193.CommitSig): _193.CommitSigProtoMsg;
        };
        Proposal: {
            typeUrl: string;
            encode(message: _193.Proposal, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _193.Proposal;
            fromJSON(object: any): _193.Proposal;
            toJSON(message: _193.Proposal): import("../json-safe.js").JsonSafe<_193.Proposal>;
            fromPartial(object: Partial<_193.Proposal>): _193.Proposal;
            fromProtoMsg(message: _193.ProposalProtoMsg): _193.Proposal;
            toProto(message: _193.Proposal): Uint8Array;
            toProtoMsg(message: _193.Proposal): _193.ProposalProtoMsg;
        };
        SignedHeader: {
            typeUrl: string;
            encode(message: _193.SignedHeader, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _193.SignedHeader;
            fromJSON(object: any): _193.SignedHeader;
            toJSON(message: _193.SignedHeader): import("../json-safe.js").JsonSafe<_193.SignedHeader>;
            fromPartial(object: Partial<_193.SignedHeader>): _193.SignedHeader;
            fromProtoMsg(message: _193.SignedHeaderProtoMsg): _193.SignedHeader;
            toProto(message: _193.SignedHeader): Uint8Array;
            toProtoMsg(message: _193.SignedHeader): _193.SignedHeaderProtoMsg;
        };
        LightBlock: {
            typeUrl: string;
            encode(message: _193.LightBlock, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _193.LightBlock;
            fromJSON(object: any): _193.LightBlock;
            toJSON(message: _193.LightBlock): import("../json-safe.js").JsonSafe<_193.LightBlock>;
            fromPartial(object: Partial<_193.LightBlock>): _193.LightBlock;
            fromProtoMsg(message: _193.LightBlockProtoMsg): _193.LightBlock;
            toProto(message: _193.LightBlock): Uint8Array;
            toProtoMsg(message: _193.LightBlock): _193.LightBlockProtoMsg;
        };
        BlockMeta: {
            typeUrl: string;
            encode(message: _193.BlockMeta, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _193.BlockMeta;
            fromJSON(object: any): _193.BlockMeta;
            toJSON(message: _193.BlockMeta): import("../json-safe.js").JsonSafe<_193.BlockMeta>;
            fromPartial(object: Partial<_193.BlockMeta>): _193.BlockMeta;
            fromProtoMsg(message: _193.BlockMetaProtoMsg): _193.BlockMeta;
            toProto(message: _193.BlockMeta): Uint8Array;
            toProtoMsg(message: _193.BlockMeta): _193.BlockMetaProtoMsg;
        };
        TxProof: {
            typeUrl: string;
            encode(message: _193.TxProof, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _193.TxProof;
            fromJSON(object: any): _193.TxProof;
            toJSON(message: _193.TxProof): import("../json-safe.js").JsonSafe<_193.TxProof>;
            fromPartial(object: Partial<_193.TxProof>): _193.TxProof;
            fromProtoMsg(message: _193.TxProofProtoMsg): _193.TxProof;
            toProto(message: _193.TxProof): Uint8Array;
            toProtoMsg(message: _193.TxProof): _193.TxProofProtoMsg;
        };
        ConsensusParams: {
            typeUrl: string;
            encode(message: _192.ConsensusParams, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _192.ConsensusParams;
            fromJSON(object: any): _192.ConsensusParams;
            toJSON(message: _192.ConsensusParams): import("../json-safe.js").JsonSafe<_192.ConsensusParams>;
            fromPartial(object: Partial<_192.ConsensusParams>): _192.ConsensusParams;
            fromProtoMsg(message: _192.ConsensusParamsProtoMsg): _192.ConsensusParams;
            toProto(message: _192.ConsensusParams): Uint8Array;
            toProtoMsg(message: _192.ConsensusParams): _192.ConsensusParamsProtoMsg;
        };
        BlockParams: {
            typeUrl: string;
            encode(message: _192.BlockParams, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _192.BlockParams;
            fromJSON(object: any): _192.BlockParams;
            toJSON(message: _192.BlockParams): import("../json-safe.js").JsonSafe<_192.BlockParams>;
            fromPartial(object: Partial<_192.BlockParams>): _192.BlockParams;
            fromProtoMsg(message: _192.BlockParamsProtoMsg): _192.BlockParams;
            toProto(message: _192.BlockParams): Uint8Array;
            toProtoMsg(message: _192.BlockParams): _192.BlockParamsProtoMsg;
        };
        EvidenceParams: {
            typeUrl: string;
            encode(message: _192.EvidenceParams, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _192.EvidenceParams;
            fromJSON(object: any): _192.EvidenceParams;
            toJSON(message: _192.EvidenceParams): import("../json-safe.js").JsonSafe<_192.EvidenceParams>;
            fromPartial(object: Partial<_192.EvidenceParams>): _192.EvidenceParams;
            fromProtoMsg(message: _192.EvidenceParamsProtoMsg): _192.EvidenceParams;
            toProto(message: _192.EvidenceParams): Uint8Array;
            toProtoMsg(message: _192.EvidenceParams): _192.EvidenceParamsProtoMsg;
        };
        ValidatorParams: {
            typeUrl: string;
            encode(message: _192.ValidatorParams, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _192.ValidatorParams;
            fromJSON(object: any): _192.ValidatorParams;
            toJSON(message: _192.ValidatorParams): import("../json-safe.js").JsonSafe<_192.ValidatorParams>;
            fromPartial(object: Partial<_192.ValidatorParams>): _192.ValidatorParams;
            fromProtoMsg(message: _192.ValidatorParamsProtoMsg): _192.ValidatorParams;
            toProto(message: _192.ValidatorParams): Uint8Array;
            toProtoMsg(message: _192.ValidatorParams): _192.ValidatorParamsProtoMsg;
        };
        VersionParams: {
            typeUrl: string;
            encode(message: _192.VersionParams, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _192.VersionParams;
            fromJSON(object: any): _192.VersionParams;
            toJSON(message: _192.VersionParams): import("../json-safe.js").JsonSafe<_192.VersionParams>;
            fromPartial(object: Partial<_192.VersionParams>): _192.VersionParams;
            fromProtoMsg(message: _192.VersionParamsProtoMsg): _192.VersionParams;
            toProto(message: _192.VersionParams): Uint8Array;
            toProtoMsg(message: _192.VersionParams): _192.VersionParamsProtoMsg;
        };
        HashedParams: {
            typeUrl: string;
            encode(message: _192.HashedParams, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _192.HashedParams;
            fromJSON(object: any): _192.HashedParams;
            toJSON(message: _192.HashedParams): import("../json-safe.js").JsonSafe<_192.HashedParams>;
            fromPartial(object: Partial<_192.HashedParams>): _192.HashedParams;
            fromProtoMsg(message: _192.HashedParamsProtoMsg): _192.HashedParams;
            toProto(message: _192.HashedParams): Uint8Array;
            toProtoMsg(message: _192.HashedParams): _192.HashedParamsProtoMsg;
        };
        Evidence: {
            typeUrl: string;
            encode(message: _191.Evidence, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _191.Evidence;
            fromJSON(object: any): _191.Evidence;
            toJSON(message: _191.Evidence): import("../json-safe.js").JsonSafe<_191.Evidence>;
            fromPartial(object: Partial<_191.Evidence>): _191.Evidence;
            fromProtoMsg(message: _191.EvidenceProtoMsg): _191.Evidence;
            toProto(message: _191.Evidence): Uint8Array;
            toProtoMsg(message: _191.Evidence): _191.EvidenceProtoMsg;
        };
        DuplicateVoteEvidence: {
            typeUrl: string;
            encode(message: _191.DuplicateVoteEvidence, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _191.DuplicateVoteEvidence;
            fromJSON(object: any): _191.DuplicateVoteEvidence;
            toJSON(message: _191.DuplicateVoteEvidence): import("../json-safe.js").JsonSafe<_191.DuplicateVoteEvidence>;
            fromPartial(object: Partial<_191.DuplicateVoteEvidence>): _191.DuplicateVoteEvidence;
            fromProtoMsg(message: _191.DuplicateVoteEvidenceProtoMsg): _191.DuplicateVoteEvidence;
            toProto(message: _191.DuplicateVoteEvidence): Uint8Array;
            toProtoMsg(message: _191.DuplicateVoteEvidence): _191.DuplicateVoteEvidenceProtoMsg;
        };
        LightClientAttackEvidence: {
            typeUrl: string;
            encode(message: _191.LightClientAttackEvidence, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _191.LightClientAttackEvidence;
            fromJSON(object: any): _191.LightClientAttackEvidence;
            toJSON(message: _191.LightClientAttackEvidence): import("../json-safe.js").JsonSafe<_191.LightClientAttackEvidence>;
            fromPartial(object: Partial<_191.LightClientAttackEvidence>): _191.LightClientAttackEvidence;
            fromProtoMsg(message: _191.LightClientAttackEvidenceProtoMsg): _191.LightClientAttackEvidence;
            toProto(message: _191.LightClientAttackEvidence): Uint8Array;
            toProtoMsg(message: _191.LightClientAttackEvidence): _191.LightClientAttackEvidenceProtoMsg;
        };
        EvidenceList: {
            typeUrl: string;
            encode(message: _191.EvidenceList, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _191.EvidenceList;
            fromJSON(object: any): _191.EvidenceList;
            toJSON(message: _191.EvidenceList): import("../json-safe.js").JsonSafe<_191.EvidenceList>;
            fromPartial(object: Partial<_191.EvidenceList>): _191.EvidenceList;
            fromProtoMsg(message: _191.EvidenceListProtoMsg): _191.EvidenceList;
            toProto(message: _191.EvidenceList): Uint8Array;
            toProtoMsg(message: _191.EvidenceList): _191.EvidenceListProtoMsg;
        };
        Block: {
            typeUrl: string;
            encode(message: _190.Block, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _190.Block;
            fromJSON(object: any): _190.Block;
            toJSON(message: _190.Block): import("../json-safe.js").JsonSafe<_190.Block>;
            fromPartial(object: Partial<_190.Block>): _190.Block;
            fromProtoMsg(message: _190.BlockProtoMsg): _190.Block;
            toProto(message: _190.Block): Uint8Array;
            toProtoMsg(message: _190.Block): _190.BlockProtoMsg;
        };
    };
    const version: {
        App: {
            typeUrl: string;
            encode(message: _195.App, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _195.App;
            fromJSON(object: any): _195.App;
            toJSON(message: _195.App): import("../json-safe.js").JsonSafe<_195.App>;
            fromPartial(object: Partial<_195.App>): _195.App;
            fromProtoMsg(message: _195.AppProtoMsg): _195.App;
            toProto(message: _195.App): Uint8Array;
            toProtoMsg(message: _195.App): _195.AppProtoMsg;
        };
        Consensus: {
            typeUrl: string;
            encode(message: _195.Consensus, writer?: import("../binary.js").BinaryWriter): import("../binary.js").BinaryWriter;
            decode(input: import("../binary.js").BinaryReader | Uint8Array, length?: number): _195.Consensus;
            fromJSON(object: any): _195.Consensus;
            toJSON(message: _195.Consensus): import("../json-safe.js").JsonSafe<_195.Consensus>;
            fromPartial(object: Partial<_195.Consensus>): _195.Consensus;
            fromProtoMsg(message: _195.ConsensusProtoMsg): _195.Consensus;
            toProto(message: _195.Consensus): Uint8Array;
            toProtoMsg(message: _195.Consensus): _195.ConsensusProtoMsg;
        };
    };
}
